WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB (master)
$ CD BRANCHES
bash: CD: command not found

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB (master)
$ cd branches

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git init
Initialized empty Git repository in C:/GIT - GITHUB/BRANCHES/.git/

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ ls

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ create files
bash: create: command not found

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git create files
git: 'create' is not a git command. See 'git --help'.

The most similar command is
        reset

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git --help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ mkt
bash: mkt: command not found

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git status
On branch master

No commits yet

nothing to commit (create/copy files and use "git add" to track)

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git add .

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   Arquivo_1.txt


WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git commit -m "Primeiro commit na Branch master do Arquivo_1"
[master (root-commit) 28ba052] Primeiro commit na Branch master do Arquivo_1
 1 file changed, 1 insertion(+)
 create mode 100644 Arquivo_1.txt

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ ls
Arquivo_1.txt

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git log
commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f (HEAD -> master)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:17:23 2021 -0300

    Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git branch nova-branch

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git branch
* master
  nova-branch

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout nova-branch
Switched to branch 'nova-branch'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
Switched to branch 'master'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout nova-branch
Switched to branch 'nova-branch'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
Switched to branch 'master'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout nova-branch
Switched to branch 'nova-branch'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git add .

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git status
On branch nova-branch
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Arquivo_2.txt


WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git commit -m "Realizamos o commit do arquivo_2 adicionado na stage"
[nova-branch ddf8670] Realizamos o commit do arquivo_2 adicionado na stage
 1 file changed, 11 insertions(+)
 create mode 100644 Arquivo_2.txt

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git status
On branch nova-branch
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Arquivo_2.txt

no changes added to commit (use "git add" and/or "git commit -a")

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git add .

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git log
commit ddf8670eb49e59786dbec30e183cd3be1495f70e (HEAD -> nova-branch)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:27:02 2021 -0300

    Realizamos o commit do arquivo_2 adicionado na stage

commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f (master)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:17:23 2021 -0300

    Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
        Arquivo_2.txt
Please commit your changes or stash them before you switch branches.
Aborting

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git commit -m "Realizamos o commit do arquivo_2 adicionado na stage"
[nova-branch f517810] Realizamos o commit do arquivo_2 adicionado na stage
 1 file changed, 2 insertions(+)

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git status
On branch nova-branch
nothing to commit, working tree clean

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
Switched to branch 'master'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout nova-branch
Switched to branch 'nova-branch'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
Switched to branch 'master'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git log
commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f (HEAD -> master)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:17:23 2021 -0300

    Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout nova-branch
Switched to branch 'nova-branch'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git log
commit f5178100d2c3e782445cf0932038a0c7d66f3586 (HEAD -> nova-branch)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:29:18 2021 -0300

    Realizamos o commit do arquivo_2 adicionado na stage

commit ddf8670eb49e59786dbec30e183cd3be1495f70e
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:27:02 2021 -0300

    Realizamos o commit do arquivo_2 adicionado na stage

commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f (master)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:17:23 2021 -0300

    Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (nova-branch)
$ git checkout master
Switched to branch 'master'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git merge nova-branch
Updating 28ba052..f517810
Fast-forward
 Arquivo_2.txt | 13 +++++++++++++
 1 file changed, 13 insertions(+)
 create mode 100644 Arquivo_2.txt

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git log
commit f5178100d2c3e782445cf0932038a0c7d66f3586 (HEAD -> master, nova-branch)
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:29:18 2021 -0300

    Realizamos o commit do arquivo_2 adicionado na stage

commit ddf8670eb49e59786dbec30e183cd3be1495f70e
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:27:02 2021 -0300

    Realizamos o commit do arquivo_2 adicionado na stage

commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f
Author: hamamellis <wagnerhamamellis@gmail.com>
Date:   Fri Mar 5 20:17:23 2021 -0300

    Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git log --graph
* commit f5178100d2c3e782445cf0932038a0c7d66f3586 (HEAD -> master, nova-branch)
| Author: hamamellis <wagnerhamamellis@gmail.com>
| Date:   Fri Mar 5 20:29:18 2021 -0300
|
|     Realizamos o commit do arquivo_2 adicionado na stage
|
* commit ddf8670eb49e59786dbec30e183cd3be1495f70e
| Author: hamamellis <wagnerhamamellis@gmail.com>
| Date:   Fri Mar 5 20:27:02 2021 -0300
|
|     Realizamos o commit do arquivo_2 adicionado na stage
|
* commit 28ba0522137634629b3d2c8ad14b8d3367e8ab5f
  Author: hamamellis <wagnerhamamellis@gmail.com>
  Date:   Fri Mar 5 20:17:23 2021 -0300

      Primeiro commit na Branch master do Arquivo_1

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git branch -d nova-branch
Deleted branch nova-branch (was f517810).

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git branch
* master

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (master)
$ git checkout -b branch_nova
Switched to a new branch 'branch_nova'

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (branch_nova)
$ git branch
* branch_nova
  master

WAGNER@WagnerBarros MINGW64 /c/GIT - GITHUB/branches (branch_nova)
$